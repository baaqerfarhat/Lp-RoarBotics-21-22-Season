package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.configuration.annotations.ServoType;
import java.util.Set;
import com.qualcomm.robotcore.hardware.DcMotorEx;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;

@TeleOp
public class TeleTest extends LinearOpMode {
   
   DcMotorEx Elev;
   DcMotorEx LinAct;
   @Override
   public void runOpMode() throws InterruptedException 
   {
      DcMotor motor3 = hardwareMap.dcMotor.get("motor3");
      DcMotor motor2 = hardwareMap.dcMotor.get("motor2");
      DcMotor motor0 = hardwareMap.dcMotor.get("motor0");
      DcMotor motor1 = hardwareMap.dcMotor.get("motor1");
      LinAct = hardwareMap.get(DcMotorEx.class, "LinAct");
      Elev = hardwareMap.get(DcMotorEx.class, "Elev");
      DcMotor act0 = hardwareMap.dcMotor.get("act0");
      Servo  GripRight = hardwareMap.servo.get("GripRight");
      Servo  GripLeft = hardwareMap.servo.get("GripLeft");

      
      motor0.setDirection(DcMotorSimple.Direction.REVERSE);
      motor1.setDirection(DcMotorSimple.Direction.REVERSE);
      
      motor0.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
      motor1.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
      motor2.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
      motor3.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
      act0.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
      LinAct.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
      Elev.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);

      
      GripRight.setPosition(1);
      GripLeft.setPosition(0.045);
      
      double sped = 0.7;
      
      Elev.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
      LinAct.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
      waitForStart();
      if (isStopRequested()) return;
      while (opModeIsActive()) 
      {
         double y = (gamepad1.left_stick_y/2); 
         double x = (gamepad1.left_stick_x/2) * 1.125; 
         double rx = (gamepad1.right_stick_x/2);
         
         if (gamepad1.left_stick_button) // stick buttons are the new accelerators
         {
            y = (gamepad1.left_stick_y); 
            x = (gamepad1.left_stick_x) * 1.125; 
         }
         else if (gamepad1.right_stick_button)
         {
            rx = (gamepad1.right_stick_x);
         }
         
         double denominator = Math.max(Math.abs(y) + Math.abs(x) + Math.abs(rx), 1);
         double motor0Power = (y - x - rx) / denominator;
         double motor1Power = (y + x - rx) / denominator;
         double motor2Power = (y - x + rx) / denominator;
         double motor3Power = (y + x + rx) / denominator;
         if (gamepad2.dpad_left) //Dpad right and left Moves robot horizantaly on barrier 
         {
            motor0.setPower(0.5);
            motor1.setPower(-0.5);
            motor2.setPower(0.5);
            motor3.setPower(-0.5);
         }
         else if (gamepad2.dpad_right)
         {
            motor0.setPower(-0.5);
            motor1.setPower(0.5);
            motor2.setPower(-0.5);
            motor3.setPower(0.5);
         }
         else if (gamepad1.right_trigger>0.5&&y<0)
         {
            motor0.setPower(motor0Power);
            motor1.setPower(motor1Power);
            motor2.setPower(motor2Power/2);
            motor3.setPower(motor3Power/2);
         }
         else if (gamepad1.left_trigger>0.5&&y<0)
         {
            motor0.setPower(motor0Power/2);
            motor1.setPower(motor1Power/2);
            motor2.setPower(motor2Power);
            motor3.setPower(motor3Power);
         }
         else if (gamepad1.left_trigger>0.5&&y>0)
         {
            motor0.setPower(motor0Power/2);
            motor1.setPower(motor1Power/2);
            motor2.setPower(motor2Power);
            motor3.setPower(motor3Power);
         }
         else if (gamepad1.right_trigger>0.5&&y>0)
         {
            motor0.setPower(motor0Power);
            motor1.setPower(motor1Power);
            motor2.setPower(motor2Power/2);
            motor3.setPower(motor3Power/2);
         }
         else
         {
            motor0.setPower(motor0Power);
            motor1.setPower(motor1Power);
            motor2.setPower(motor2Power);
            motor3.setPower(motor3Power);
         }
         
         
         if (gamepad2.right_trigger>0)
         {
            sped = 1.0;
         }
         else if (gamepad2.right_bumper)
         {
            sped = 0.7;
         }
         else
         {
            sped = 0.4;
         }
         
         
         if (gamepad2.b) //b is red carousel
         {
            act0.setPower(-1*sped);
         }
         else if (gamepad2.y)//y is blue carousel
         {
            act0.setPower(sped);
         }
         else
         {
            act0.setPower(0);
         }
         
         
         if (gamepad2.dpad_up)// Dpad Up and down moves linear actuator inside and out
         {
            LinAct.setTargetPosition(4800);
            LinAct.setMode(DcMotor.RunMode.RUN_TO_POSITION);
            LinAct.setVelocity(3000);
         }
         else if(gamepad2.dpad_down)
         {
            LinAct.setTargetPosition(350);
            LinAct.setMode(DcMotor.RunMode.RUN_TO_POSITION);
            LinAct.setVelocity(-3000);
         }
         else 
         {
            LinAct.setVelocity(0);
         }
         
         
         if (gamepad2.x)
         { //holding x closes the grip
            GripRight.setPosition(0.95);
            GripLeft.setPosition(0.095);
         }
         else
         {
            GripRight.setPosition(1);
            GripLeft.setPosition(0.045);
         }
         
         
         if (gamepad2.left_trigger>0)
         { //left trigger and left button for manual control
            Elev.setTargetPosition(400);
            Elev.setMode(DcMotor.RunMode.RUN_TO_POSITION);
            Elev.setVelocity(-3000);
         }
         else if (gamepad2.left_bumper)
         {
            Elev.setTargetPosition(4250);
            Elev.setMode(DcMotor.RunMode.RUN_TO_POSITION);
            Elev.setVelocity(3000);
         }
         else
         {
            Elev.setVelocity(0);
         }
         
         telemetry.addData("motor0", motor0.getPower());
         telemetry.addData("motor1", motor1.getPower());
         telemetry.addData("motor2", motor2.getPower());
         telemetry.addData("motor3", motor3.getPower());
         telemetry.addData("act0", act0.getPower());
         telemetry.addData("GripRight", GripRight.getPosition());
         telemetry.addData("GripLeft", GripLeft.getPosition());
         telemetry.addData("LinAct Velocity", LinAct.getVelocity());
         telemetry.addData("LinAct Position", LinAct.getCurrentPosition());
         telemetry.addData("Elev Velocity", Elev.getVelocity());
         telemetry.addData("Elev Position", Elev.getCurrentPosition());
         telemetry.update();
      }
   }
}